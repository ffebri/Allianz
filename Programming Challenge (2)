// There is a possible ambiguity here: should both members of a pair be below 10000 
// or does the condition also include pairs (a,b) for which a<10000, but b not.
// A second issue is: there exist so-called perfect numbers: numbers so that d(a)=a.
// Well the problem statement says that is not an amicable pair.

public class ClassAmicable {

    public static void main(String[] args) {

        int sum = 0;  // variable sum = 0
        for (int i = 220; i <= 10000; i++) {
            if(AmicablePair(i)) {
                sum += i;
            }
        }
        System.out.println("The sum of all the amicable numbers under 10000 = " + sum); // statement
    }

    public static boolean AmicablePair(int a) {
        int b = sumOfDivisors(a);
        if (a == b) {
           return false;  // a != b 
        }

        return a == sumOfDivisors(b);
    }

    public static int sumOfDivisors(int b) {
        int tempSum = 0;
        for (int i = 1; i <= b / 2; i++) {
            if(b % i == 0) {
                tempSum += i;
            }
        }
        return tempSum;
    }
}
